<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.jdevelop.route53.dyndns</groupId>
  <artifactId>dyndns</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>dyndns</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <slf4j.version>1.7.2</slf4j.version>
    <java.bootstrap.classes>${java.home}/lib/rt.jar</java.bootstrap.classes>
    <java.cryptographic.extension.classes>${java.home}/lib/jce.jar</java.cryptographic.extension.classes>
    <java.secure.socket.extension.classes>${java.home}/lib/jsse.jar</java.secure.socket.extension.classes>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>com.typesafe</groupId>
      <artifactId>config</artifactId>
      <version>1.0.2</version>
    </dependency>
    <dependency>
      <groupId>com.amazonaws</groupId>
      <artifactId>aws-java-sdk</artifactId>
      <version>1.5.0</version>
    </dependency>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>2.10.0</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.9</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>net.sf.proguard</groupId>
      <artifactId>proguard-base</artifactId>
      <version>4.9</version>
      <scope>runtime</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <version>3.1.3</version>
        <configuration>
          <charset>${project.build.sourceEncoding}</charset>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <archive>
            <manifest>
              <mainClass>com.jdevelop.route53.dyndns.Main</mainClass>
            </manifest>
          </archive>
          <descriptorRefs>
            <descriptorRef>jar-with-dependencies</descriptorRef>
          </descriptorRefs>
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.github.wvengen</groupId>
        <artifactId>proguard-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>proguard</id>
            <!--<phase>package</phase>-->
<!--
            <goals>
              <goal>proguard</goal>
            </goals>
-->
          </execution>
        </executions>
        <configuration>
          <injar>${project.build.finalName}-jar-with-dependencies.jar</injar>
          <outjar>${project.build.finalName}-proguarded</outjar>
          <options>
            <option>-keep public class * { *; }</option>
            <option>-dontwarn scala.**</option>
            <option>-keepclasseswithmembers public class * { public static void main(java.lang.String[]); }</option>
            <option>-keep class * implements org.xml.sax.EntityResolver</option>
            <option>-keepclassmembers class * { ** MODULE$; }</option>
            <option>-keepclassmembernames class scala.concurrent.forkjoin.ForkJoinPool {
              long eventCount;
              int workerCounts;
              int runControl;
              scala.concurrent.forkjoin.ForkJoinPool$WaitQueueNode syncStack;
              scala.concurrent.forkjoin.ForkJoinPool$WaitQueueNode spareStack;
              }
            </option>

            <option>-keepclassmembernames class scala.concurrent.forkjoin.ForkJoinWorkerThread {
              int base;
              int sp;
              int runState;
              }
            </option>

            <option>-keepclassmembernames class scala.concurrent.forkjoin.ForkJoinTask {
              int status;
              }
            </option>

            <option>-keepclassmembernames class scala.concurrent.forkjoin.LinkedTransferQueue {
              scala.concurrent.forkjoin.LinkedTransferQueue$PaddedAtomicReference head;
              scala.concurrent.forkjoin.LinkedTransferQueue$PaddedAtomicReference tail;
              scala.concurrent.forkjoin.LinkedTransferQueue$PaddedAtomicReference cleanMe;
              }
            </option>
            <option>-dontskipnonpubliclibraryclassmembers</option>
          </options>
          <libs>
            <lib>${java.bootstrap.classes}</lib>
            <lib>${java.cryptographic.extension.classes}</lib>
            <lib>${java.secure.socket.extension.classes}</lib>
          </libs>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>net.sf.proguard</groupId>
            <artifactId>proguard-base</artifactId>
            <version>4.9</version>
            <scope>runtime</scope>
          </dependency>
        </dependencies>
      </plugin>
    </plugins>
  </build>
</project>